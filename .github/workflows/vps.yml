name: Free VPS with Stable Tailscale + tmate + Backup

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # every 6 hours

jobs:
  vps:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo (to push backup)
        uses: actions/checkout@v4

      - name: Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey ${{ secrets.TS_AUTHKEY }} --hostname github-vps

      - name: Install tmate, git, curl, jq, tar
        run: |
          sudo apt-get update
          sudo apt-get install -y tmate git curl jq tar

      - name: Restore backup from transfer.sh
        run: |
          mkdir -p ~/vps-data
          wget -q https://raw.githubusercontent.com/${{ github.repository }}/backup/latest.txt -O latest.txt || echo "No backup link found"
          if [ -s latest.txt ]; then
            echo "Restoring backup..."
            curl -sL $(cat latest.txt) | tar -xz -C ~/vps-data
          else
            echo "No backup to restore"
          fi

      - name: Create 'biralo' user with sudo and set home to ~/vps-data
        run: |
          sudo useradd -m -d /home/biralo -s /bin/bash biralo
          echo 'biralo:biralo' | sudo chpasswd
          sudo usermod -aG sudo biralo
          sudo mkdir -p /home/biralo
          sudo cp -r ~/vps-data/* /home/biralo/ 2>/dev/null || true
          sudo chown -R biralo:biralo /home/biralo
          echo "User 'biralo' created with sudo access and home linked to ~/vps-data"

      - name: Show stable Tailscale IPv4
        run: sudo tailscale ip -4

      - name: Start tmate session and keep VPS running
        id: tmate-session
        run: |
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          echo "SSH: $(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')" >> $GITHUB_ENV
          echo "Web: $(tmate -S /tmp/tmate.sock display -p '#{tmate_web}')" >> $GITHUB_ENV
          sleep $((5*3600 + 55*60))  # sleep 5h 55m before backup (to avoid race with restart)

      - name: Backup VPS data to transfer.sh
        id: upload-backup
        run: |
          tar -czf /tmp/vps-backup.tar.gz -C ~/vps-data .
          echo "Uploading backup to transfer.sh..."
          url=$(curl --upload-file /tmp/vps-backup.tar.gz https://transfer.sh/vps-backup.tar.gz)
          echo "Backup URL: $url"
          echo "$url" > latest.txt

      - name: Commit and push latest backup link
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch origin backup || git checkout --orphan backup
          git checkout backup || git checkout --orphan backup
          mv latest.txt latest.txt
          git add latest.txt
          git commit -m "Update backup link $(date)"
          git push --force origin backup

      - name: Output tmate SSH & Web link
        run: |
          echo "Your VPS is ready!"
          echo "Tmate SSH: ${{ env.SSH }}"
          echo "Tmate Web: ${{ env.Web }}"

name: Free VPS with Stable Tailscale + tmate + Backup + Auto Rotation

on:
  repository_dispatch:
    types: [create-vps]
  workflow_dispatch:

jobs:
  vps:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hours max run time

    steps:
      - name: Checkout repo (for pushing backup)
        uses: actions/checkout@v4

      - name: Set hostname to Biralo
        run: |
          sudo hostnamectl set-hostname Biralo

      - name: Create user 'biralo' with sudo and password access
        run: |
          sudo useradd -m -s /bin/bash biralo || echo "User biralo already exists"
          echo "biralo:biralo" | sudo chpasswd
          sudo usermod -aG sudo biralo
          echo "biralo ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/biralo

      - name: Set default directory to /home/biralo/vps-data on login
        run: |
          sudo mkdir -p /home/biralo/vps-data
          sudo chown -R biralo:biralo /home/biralo/vps-data
          grep -qxF 'cd ~/vps-data' /home/biralo/.bashrc || echo 'cd ~/vps-data' | sudo tee -a /home/biralo/.bashrc

      - name: Install tailscale and dependencies (fixed key import)
        run: |
          sudo rm -f /etc/apt/sources.list.d/tailscale.list
          sudo rm -f /usr/share/keyrings/tailscale-archive-keyring.gpg

          curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/jammy.gpg | sudo tee /usr/share/keyrings/tailscale-archive-keyring.gpg >/dev/null
          echo "deb [signed-by=/usr/share/keyrings/tailscale-archive-keyring.gpg] https://pkgs.tailscale.com/stable/ubuntu jammy main" | sudo tee /etc/apt/sources.list.d/tailscale.list

          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 458CA832957F5868 || echo "Key import failed"

          sudo apt-get update
          sudo apt-get install -y tailscale tmate curl tar jq

      - name: Start Tailscale
        run: |
          sudo tailscale up --authkey ${{ secrets.TS_AUTHKEY }} --hostname github-vps

      - name: Restore backup (if exists)
        run: |
          git fetch origin backup || echo "No backup branch"
          git checkout backup -- latest.txt || echo "No latest.txt file"
          if [ -f latest.txt ]; then
            curl -o backup.tar.gz "$(cat latest.txt)"
            mkdir -p /home/biralo/vps-data
            tar -xvzf backup.tar.gz -C /home/biralo/vps-data || echo "No backup to restore"
            sudo chown -R biralo:biralo /home/biralo/vps-data
          else
            echo "No backup to restore"
          fi

      - name: Show stable Tailscale IPv4
        run: sudo tailscale ip -4

      - name: Start tmate session and keep VPS alive
        id: tmate-session
        run: |
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          ssh=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          web=$(tmate -S /tmp/tmate.sock display -p '#{tmate_web}')
          echo "ssh=$ssh" >> $GITHUB_OUTPUT
          echo "web=$web" >> $GITHUB_OUTPUT
          sleep $((5*3600 + 57*60))  # Sleep 5h 57m before backup (rotate)

      - name: Backup VPS data to transfer.sh
        run: |
          tar -czf /tmp/vps-backup.tar.gz -C /home/biralo/vps-data .
          url=$(curl --upload-file /tmp/vps-backup.tar.gz https://transfer.sh/vps-backup.tar.gz)
          echo "$url" > latest.txt

      - name: Commit and push latest backup link
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"
          git fetch origin
          git switch --force-create backup || git checkout --orphan backup
          git checkout backup
          git add latest.txt
          git commit -m "Auto backup on rotation $(date)"
          git push origin backup --force

      - name: Trigger next VPS rotation
        run: |
          curl -X POST -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type":"create-vps"}'

      - name: Output tmate SSH & Web links
        run: |
          echo "✅ Your VPS is ready!"
          echo "🔐 Tmate SSH: ${{ steps.tmate-session.outputs.ssh }}"
          echo "🌐 Tmate Web: ${{ steps.tmate-session.outputs.web }}"

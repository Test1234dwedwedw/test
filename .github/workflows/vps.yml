name: 24/7 VPS with Auto Backup & Restore

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'

jobs:
  vps:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Set up Tmate session
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: false

      - name: Restore backup if exists
        run: |
          set -e
          echo "🔄 Restoring latest backup (if exists)..."
          curl -s https://raw.githubusercontent.com/Test1234dwedwedw/test/backup/latest.txt -o latest.txt || echo "No latest.txt"
          if [ -s latest.txt ]; then
            url=$(cat latest.txt)
            curl -L "$url" -o backup.tar.gz
            mkdir -p /home/runner/vps-data
            tar -xzf backup.tar.gz -C /home/runner/vps-data
            echo "✅ Restored backup!"
          else
            echo "⚠️ No backup found to restore."
          fi

      - name: Start your VPS process (replace this with your command)
        run: |
          echo "🖥️ Running your VPS logic here"
          sleep 3600

      - name: Backup data to transfer.sh
        if: always()
        run: |
          echo "🧠 Backing up data..."
          mkdir -p /home/runner/vps-data
          tar -czf backup-$(date +%Y%m%d%H%M%S).tar.gz -C /home/runner/vps-data .
          backup_url=$(curl --upload-file backup-*.tar.gz https://transfer.sh/backup.tar.gz)
          echo "$backup_url" > latest.txt
          echo "📦 Backup uploaded: $backup_url"

      - name: Push latest.txt to backup branch
        if: always()
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git fetch origin
          git switch --create backup || git switch backup
          mv latest.txt backup/latest.txt
          git add backup/latest.txt
          git commit -m "Updated latest backup URL"
          git push origin backup --force

name: Free VPS Rotation with Stable Tailscale + tmate + Backup

on:
  repository_dispatch:
    types: [create-vps]
  workflow_dispatch:

jobs:
  vps:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hours max runtime

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install tailscale and dependencies (fixed GPG key for jammy)
        run: |
          sudo rm -f /etc/apt/sources.list.d/tailscale.list
          sudo rm -f /usr/share/keyrings/tailscale-archive-keyring.gpg

          curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/jammy.gpg | sudo tee /usr/share/keyrings/tailscale-archive-keyring.gpg >/dev/null
          echo "deb [signed-by=/usr/share/keyrings/tailscale-archive-keyring.gpg] https://pkgs.tailscale.com/stable/ubuntu jammy main" | sudo tee /etc/apt/sources.list.d/tailscale.list

          sudo apt-get update
          sudo apt-get install -y tailscale tmate curl tar jq

      - name: Start tailscale
        run: |
          sudo tailscale up --authkey ${{ secrets.TS_AUTHKEY }} --hostname github-vps

      - name: Restore backup from backup branch if exists
        run: |
          git fetch origin backup || echo "No backup branch"
          git checkout backup -- latest.txt || echo "No latest.txt"
          if [ -f latest.txt ]; then
            echo "Restoring backup..."
            curl -o backup.tar.gz "$(cat latest.txt)"
            mkdir -p ~/vps-data
            tar -xzf backup.tar.gz -C ~/vps-data || echo "No backup archive"
          else
            echo "No backup link to restore"
          fi

      - name: Start tmate session
        id: tmate-session
        run: |
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          ssh_url=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          web_url=$(tmate -S /tmp/tmate.sock display -p '#{tmate_web}')
          echo "ssh=$ssh_url" >> $GITHUB_OUTPUT
          echo "web=$web_url" >> $GITHUB_OUTPUT
          echo "SSH URL: $ssh_url"
          echo "Web URL: $web_url"

      - name: Sleep for 5 hours 57 minutes
        run: sleep $((5*3600 + 57*60))

      - name: Backup vps-data and upload to transfer.sh
        run: |
          tar -czf /tmp/vps-backup.tar.gz -C ~/vps-data .
          url=$(curl --upload-file /tmp/vps-backup.tar.gz https://transfer.sh/vps-backup.tar.gz)
          echo "$url" > latest.txt
          echo "Backup uploaded to: $url"

      - name: Commit and push latest backup link to backup branch
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch origin
          git switch --force-create backup
          git add latest.txt
          git commit -m "Auto backup on $(date)"
          git push origin backup --force

      - name: Trigger next VPS run
        run: |
          curl -X POST -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type":"create-vps"}'
